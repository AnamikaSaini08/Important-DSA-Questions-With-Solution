class Solution {
public:
    //Find Mid
    //Reverse Second Half
    //Merge Two List
    
    ListNode* reverse(ListNode *head)
    {
        if(!head || !head->next)
            return head;
        ListNode *temp = reverse(head->next);
        head->next->next = head;
        head->next = NULL;
        return temp;
    }
    
    void reorderList(ListNode* head) {
        if(!head || !head->next)
            return;
        
        ListNode *slow = head;
        ListNode *fast = head->next;
        
        while(fast and fast->next)
        {
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode *head2 = reverse(slow->next);
        slow->next = NULL;
        
        while(head2)
        {
            ListNode *temp1 = head->next;
            head->next = head2;
            ListNode *temp2 = head2->next;
            head2->next = temp1;
            head = temp1;
            head2 = temp2;
        }
        
    }
};
