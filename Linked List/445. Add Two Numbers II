class Solution {
public:
    ListNode* reverse(ListNode *node)
    {
        if(!node || !node->next)
            return node;
        ListNode *temp = reverse(node->next);
        node->next->next = node;
        node->next = NULL;
        return temp;
    }
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        l1 = reverse(l1);
        l2 = reverse(l2);
        int sum = 0, carry = 0;
        ListNode *head=  NULL , *temp;
        
        while(l1 || l2 || carry)
        {
            if(l1){
                sum += l1->val;
                l1 = l1->next;
            }
            if(l2){
                sum += l2->val;
                l2 = l2->next;
            }
            sum += carry;
            carry = sum/10;
            
            ListNode *newnode = new ListNode(sum%10);
            if(!head){
                head = newnode;
                temp = head;
            }
            else{
                temp->next = newnode;
                temp = newnode;
            }
            sum = 0;
        }
        return reverse(head);
    }
};
