class Solution {
public:
    struct compare{
        bool operator()(ListNode *a , ListNode *b)
        {
            return a->val > b->val;

        }
    };
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        int k = lists.size();
        
        priority_queue<ListNode*,vector<ListNode*>,compare> minH;
        ListNode *head = new ListNode(0);
        ListNode *last = head;
        
        for(int i=0 ; i<k ; i++)
        {
           if(lists[i]) 
            minH.push(lists[i]);
        }
        if(minH.size()==0)
            return NULL;
        
        while(!minH.empty())
        {
            ListNode *node = minH.top();
            minH.pop();
            if(node->next)
                minH.push(node->next);
            last->next = node;
            last = node;
        }
        return head->next;
    }
};
