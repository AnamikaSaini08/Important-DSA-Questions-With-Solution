class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        
        vector<vector<int>>ans;
        map<int , map<int , multiset<int>> > mp;
        
        if(!root)
            return ans;
        
        queue<pair<TreeNode* , pair<int, int> >>q;
        q.push({root , {0,0}});
        
        while(q.size())
        {
            TreeNode *temp = q.front().first;
            int ind = q.front().second.first;
            int height = q.front().second.second;
            
            mp[ind][height].insert(temp->val);
            
            if(temp->left)
                q.push({temp->left , {ind-1 , height+1}});
            if(temp->right)
                q.push({temp->right , {ind+1 , height+1}});
            q.pop();
        }
        
        for(auto temp : mp)
        {
            vector<int>v;
            for(auto t : temp.second)
            {
                v.insert(v.end() , t.second.begin() , t.second.end());
            }
            ans.push_back(v);
        }
        return ans;
    }
};
