class Solution {
public:
    void solve(int row , int col , vector<vector<int>>& grid , int &cnt)
    {
        if(row<0 || row>= grid.size() || col<0 || col>=grid[0].size() || !grid[row][col])
            return;
        grid[row][col] = 0 ;
        cnt += 1;
        solve(row+0 , col-1 , grid , cnt);
        solve(row+0 , col+1 , grid , cnt);
        solve(row-1 , col+0 , grid , cnt); 
        solve(row+1 , col+0 , grid , cnt);
        return;
    }
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int ans = 0;
        int row = grid.size() , col = grid[0].size();
        
        for(int i=0 ; i<row ; i++)
        {
            for(int j = 0; j<col ; j++)
            {
                if(grid[i][j]){
                    int cnt = 0; 
                    solve(i , j , grid , cnt);
                    ans = max(cnt , ans);
                }
            }
        }
        return ans;
    }
};
