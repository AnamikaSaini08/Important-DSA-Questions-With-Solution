class Solution {
public:
    void solve(vector<vector<int>>& grid1, vector<vector<int>>& grid2 , int row , int col , int &flag)
    {
        if(row <0 || row >= grid1.size() || col<0 || col >=grid1[0].size() || !grid2[row][col])
            return;
        
        if(grid1[row][col] == 0)
            flag = 0;
        
        grid2[row][col] = 0;
        solve(grid1 , grid2 , row+1 , col , flag);
        solve(grid1 , grid2 , row-1 , col , flag);
        solve(grid1 , grid2 , row , col+1 , flag);
        solve(grid1 , grid2 , row , col-1 , flag);
    }
    int countSubIslands(vector<vector<int>>& grid1, vector<vector<int>>& grid2) {
        
        int row = grid1.size() ;
        int col = grid1[0].size();
        int ans = 0;
        for(int i=0 ; i<row ; i++)
        {
            for(int j=0 ; j<col ; j++)
            {
                if(grid2[i][j])
                {
                    int flag =1;
                    solve(grid1 , grid2 , i , j , flag);
                    ans += flag;
                }
            }
        }
        return ans;
    }
};
