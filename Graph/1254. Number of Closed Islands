class Solution {
public:
    bool solve(vector<vector<int>>& grid , int row , int col)
    {
        if(row<0 || row >= grid.size() || col<0 || col>=grid[0].size())
            return false;
        if(row == 0 || row == grid.size() || col == 0 || col == grid[0].size())
        {
            if(grid[row][col]==0)
                return false;
        }
        
        if(grid[row][col])
            return true;
        grid[row][col] = 1;
        return solve(grid , row, col-1)& solve(grid , row, col+1)&solve(grid , row-1, col)&solve(grid , row+1, col);
    }
    int closedIsland(vector<vector<int>>& grid) {
        int ans = 0;
        int row = grid.size();
        int col = grid[0].size();
        
        for(int i=0 ; i<row ; i++){
            for(int j=0 ; j<col ;j++)
            {
                if(grid[i][j] == 0){
                    bool temp = solve(grid , i , j);
                    if(temp)
                        ans += 1;
                }
            }
        }
        return ans;
    }
};
