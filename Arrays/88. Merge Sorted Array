O(Nlogn) {for gap operation} + O(N) {for traversing at worst case}
O(NLOGN)

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        
        int j = 0;
        for(int i=m ; i<(m+n) ; i++)
        {
            nums1[i] = nums2[j++];
        }
        
        int size = (m+n);
        int gap = ceil((float)size/2);
        
        while(gap)
        {
            for(int i = 0 ; i<size-gap ; i++)
            {
                if(nums1[i] <= nums1[i+gap])
                    continue;
                else{
                    swap(nums1[i] , nums1[i+gap]);
                }
            }
            if(gap == 1)
                break;
            gap = ceil((float) gap / 2);
        }
    }
};
