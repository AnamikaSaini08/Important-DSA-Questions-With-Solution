//Snap Shot Method

class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        int n = nums.size();
        
        int i=0;
        while(i < n )
        {
            if(nums[i] !=nums[nums[i] - 1])
                swap(nums[i],nums[nums[i]-1]);
            else
                i++;
        }
        vector<int>ans;
        for(int i=0 ; i<n ; i++){
            if( nums[i] != i+1)
                ans.push_back(nums[i]);
        }
        return ans;
    }
};

//More Efficient
class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        int n = nums.size();
        vector<int>ans;
        
        for(int i=0; i<n ; i++)
        {
            int temp = abs(nums[i])-1;
            if(nums[temp] < 0)
            {
                ans.push_back(temp+1);
                nums[temp] = -nums[temp];
            }
            else
                nums[temp] = -nums[temp];
        }
        return ans;
    }
};
