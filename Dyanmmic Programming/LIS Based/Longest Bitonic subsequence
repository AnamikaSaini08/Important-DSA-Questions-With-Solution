	int LongestBitonicSequence(vector<int>nums)
	{
	    // code here
	    int n = nums.size();
	    vector<int>LIS_left(n , 1) , LIS_right(n,1);
	    
	    for(int i=1 ; i<n ; i++)
	    {
	        for(int j = 0 ; j<i ; j++)
	        {
	            if(nums[i] > nums[j] and LIS_left[j]+1 > LIS_left[i])
	                LIS_left[i] = LIS_left[j] + 1;
	        }
	    }
	    //right side
	    for(int i=n-2 ; i>=0 ; i--)
	    {
	        for(int j = n-1 ; j>i ; j--)
	        {
	            if(nums[i] > nums[j] and LIS_right[j]+1 > LIS_right[i])
	                LIS_right[i] = LIS_right[j] + 1;
	        }
	    }
	    int ans = 0;
	    for(int i=0 ; i<n ; i++)
	        ans = max(ans , LIS_right[i]+LIS_left[i]-1);
	   return ans;
	}
