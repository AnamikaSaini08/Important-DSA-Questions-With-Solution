int countPartitions(int n, int d, vector<int> &nums) {
    // Write your code here.
    int sum = 0;
    int mod = (int)(1e9 + 7);
    for(int i = 0; i<n ; i++)
        sum += nums[i];
    
    if( sum-d < 0 || (sum-d)%2)
        return false;
    
    sum = (sum-d)/2;
    
    vector<vector<int>>dp(n , vector<int>(sum+1 , 0));
    
    if(nums[0] == 0)
        dp[0][0] = 2;    //take
    else
        dp[0][0] = 1;  //not take
    
    if(nums[0]!=0 and nums[0] <= sum)
        dp[0][nums[0]] = 1;
    
    for(int i=1 ; i<n ; i++)
    {
        for(int target = 0 ; target <=sum ; target++)
        {
            int nottake = dp[i-1][target];
            int take = 0;
            if(nums[i] <= target)
                take = dp[i-1][target - nums[i]];
            dp[i][target] = (take + nottake)%mod;
        }
    }
    return dp[n-1][sum];
}


