class Solution{
    public:
    bool isSafe(vector<vector<int>> &m , int x , int y , int n , vector<vector<int>> &sol)
    {
        if(x<0 || y<0 || x>=n || y>=n || sol[x][y] || m[x][y] == 0)
            return false;
        return true;
    }
    void solve(vector<vector<int>> &m , int x , int y , int n , string path , vector<vector<int>> &sol , vector<string>&ans)
    {
        if(x == n-1 and y == n-1){
            if(m[x][y]){
                ans.push_back(path);
                return;
            }
        }
        
        if(isSafe(m , x , y , n , sol)){
            //left
            sol[x][y] = 1;
            solve(m , x , y-1 , n , path+'L' , sol , ans);
            //right
            solve(m , x , y+1 , n , path+'R' , sol , ans);
            //up
            solve(m , x-1 , y , n , path+'U' , sol , ans);
            //down
            solve(m , x+1 , y , n , path+'D' , sol , ans);
            
            sol[x][y] = 0;
        }
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string>ans;
        string path;
        vector<vector<int>>sol(n , vector<int>(n,0));
        solve( m , 0 , 0 ,n , path , sol, ans);
        return ans;
    }
};
